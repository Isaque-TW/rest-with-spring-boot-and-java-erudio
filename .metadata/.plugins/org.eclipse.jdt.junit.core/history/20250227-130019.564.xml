<?xml version="1.0" encoding="UTF-8"?><testrun name="PersonServicesTest" project="rest-with-spring-boot-and-java-erudio" tests="6" started="6" failures="0" errors="1" ignored="0">
  <testsuite name="br.com.erudio.services.PersonServicesTest" time="1.036" displayname="PersonServicesTest" uniqueid="[engine:junit-jupiter]/[class:br.com.erudio.services.PersonServicesTest]">
    <testcase name="testGivenPersonId_WhenFindById_thenReturnPersonObject" classname="br.com.erudio.services.PersonServicesTest" time="0.998" displayname="JUnit test for Given PersonId When findById then Return Person Object" uniqueid="[engine:junit-jupiter]/[class:br.com.erudio.services.PersonServicesTest]/[method:testGivenPersonId_WhenFindById_thenReturnPersonObject()]"/>
    <testcase name="testGivenEmptyPeopleList_WhenFindAllPeople_thenReturnEmptyPeopleList" classname="br.com.erudio.services.PersonServicesTest" time="0.004" displayname="JUnit test for Given Empty People list When find all people then return Empty people list" uniqueid="[engine:junit-jupiter]/[class:br.com.erudio.services.PersonServicesTest]/[method:testGivenEmptyPeopleList_WhenFindAllPeople_thenReturnEmptyPeopleList()]"/>
    <testcase name="testGivenExistingEmail_WhenSavePerson_thenThrowsException" classname="br.com.erudio.services.PersonServicesTest" time="0.01" displayname="Given Existing Email When Save Person then Throws Exception" uniqueid="[engine:junit-jupiter]/[class:br.com.erudio.services.PersonServicesTest]/[method:testGivenExistingEmail_WhenSavePerson_thenThrowsException()]"/>
    <testcase name="testGivenPersonObject_WhenSavePerson_thenReturnPersonObject" classname="br.com.erudio.services.PersonServicesTest" time="0.005" displayname="Given Person Object When Save Person then Return Person Object" uniqueid="[engine:junit-jupiter]/[class:br.com.erudio.services.PersonServicesTest]/[method:testGivenPersonObject_WhenSavePerson_thenReturnPersonObject()]"/>
    <testcase name="testGivenPersonObject_WhenUpdatePerson_thenReturnUpdatePersonObject" classname="br.com.erudio.services.PersonServicesTest" time="0.015" displayname="JUnit test for Given Person Object When Update Person then Return Update Person Object" uniqueid="[engine:junit-jupiter]/[class:br.com.erudio.services.PersonServicesTest]/[method:testGivenPersonObject_WhenUpdatePerson_thenReturnUpdatePersonObject()]">
      <error>org.mockito.exceptions.misusing.PotentialStubbingProblem: 
Strict stubbing argument mismatch. Please check:
 - this invocation of 'findById' method:
    repository.findById(null);
    -&gt; at br.com.erudio.services.PersonServices.update(PersonServices.java:56)
 - has following stubbing(s) with different arguments:
    1. repository.findById(0L);
      -&gt; at br.com.erudio.services.PersonServicesTest.testGivenPersonObject_WhenUpdatePerson_thenReturnUpdatePersonObject(PersonServicesTest.java:139)
Typically, stubbing argument mismatch indicates user mistake when writing tests.
Mockito fails early so that you can debug potential problem easily.
However, there are legit scenarios when this exception generates false negative signal:
  - stubbing the same method multiple times using 'given().will()' or 'when().then()' API
    Please use 'will().given()' or 'doReturn().when()' API for stubbing.
  - stubbed method is intentionally invoked with different arguments by code under test
    Please use default or 'silent' JUnit Rule (equivalent of Strictness.LENIENT).
For more information see javadoc for PotentialStubbingProblem class.
	at br.com.erudio.services.PersonServices.update(PersonServices.java:56)
	at br.com.erudio.services.PersonServicesTest.testGivenPersonObject_WhenUpdatePerson_thenReturnUpdatePersonObject(PersonServicesTest.java:147)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)

</error>
    </testcase>
    <testcase name="testGivenPeopleList_WhenFindAllPeople_thenReturnPeopleList" classname="br.com.erudio.services.PersonServicesTest" time="0.003" displayname="JUnit test for Given People list When find all people then return people list" uniqueid="[engine:junit-jupiter]/[class:br.com.erudio.services.PersonServicesTest]/[method:testGivenPeopleList_WhenFindAllPeople_thenReturnPeopleList()]"/>
  </testsuite>
</testrun>
